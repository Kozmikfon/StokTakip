// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokTakip.Data.Concrete.EFcore.Contexts;

#nullable disable

namespace StokTakip.Data.Migrations
{
    [DbContext(typeof(StokContext))]
    [Migration("20250814104543_Entity")]
    partial class Entity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StokTakip.Entities.Concrete.Cari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("adres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("unvan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("vergiDairesi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("vergiNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cariler", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("depoAd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("konumBilgisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rafBilgisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Depolar", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.DepoTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("hedefDepoId")
                        .HasColumnType("int");

                    b.Property<int>("kaynakDepoId")
                        .HasColumnType("int");

                    b.Property<string>("seriNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("transferNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("transferTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("hedefDepoId");

                    b.HasIndex("kaynakDepoId");

                    b.ToTable("depoTransferleri", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.DepoTransferDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("malzemeId")
                        .HasColumnType("int");

                    b.Property<decimal>("miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("transferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("malzemeId");

                    b.HasIndex("transferId");

                    b.ToTable("depoTransferDetaylari", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Irsaliye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("carId")
                        .HasColumnType("int");

                    b.Property<int>("depoId")
                        .HasColumnType("int");

                    b.Property<bool>("durum")
                        .HasColumnType("bit");

                    b.Property<string>("irsaliyeNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("irsaliyeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("irsaliyeTipi")
                        .HasColumnType("int");

                    b.Property<decimal>("toplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("carId");

                    b.HasIndex("depoId");

                    b.ToTable("irsaliyeler", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.IrsaliyeDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("araToplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("birimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("irsaliyeId")
                        .HasColumnType("int");

                    b.Property<int>("malzemeId")
                        .HasColumnType("int");

                    b.Property<decimal>("miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("seriNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("irsaliyeId");

                    b.HasIndex("malzemeId");

                    b.ToTable("irsaliyeDetaylari", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("adSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("olusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("kullanicilar", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.LogTakip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("detay")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("islemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("islemTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tabloAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("logTakipler", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Malzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("aktifPasif")
                        .HasColumnType("bit");

                    b.Property<string>("barkodNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("birim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("kategori")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("malzemeAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("minStokMiktar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("kategori", "malzemeAdi");

                    b.ToTable("Malzemeler", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HareketTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("HareketTipi")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReferansId")
                        .HasColumnType("int");

                    b.Property<string>("SeriNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("carId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.HasIndex("MalzemeId");

                    b.HasIndex("carId");

                    b.ToTable("Stoklar", (string)null);
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.DepoTransfer", b =>
                {
                    b.HasOne("StokTakip.Entities.Concrete.Depo", "hedefDepo")
                        .WithMany()
                        .HasForeignKey("hedefDepoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StokTakip.Entities.Concrete.Depo", "kaynakDepo")
                        .WithMany()
                        .HasForeignKey("kaynakDepoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("hedefDepo");

                    b.Navigation("kaynakDepo");
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.DepoTransferDetay", b =>
                {
                    b.HasOne("StokTakip.Entities.Concrete.Malzeme", "malzeme")
                        .WithMany()
                        .HasForeignKey("malzemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StokTakip.Entities.Concrete.DepoTransfer", "depoTransfer")
                        .WithMany("depoTransferDetaylari")
                        .HasForeignKey("transferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("depoTransfer");

                    b.Navigation("malzeme");
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Irsaliye", b =>
                {
                    b.HasOne("StokTakip.Entities.Concrete.Cari", "cari")
                        .WithMany()
                        .HasForeignKey("carId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StokTakip.Entities.Concrete.Depo", "depo")
                        .WithMany()
                        .HasForeignKey("depoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cari");

                    b.Navigation("depo");
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.IrsaliyeDetay", b =>
                {
                    b.HasOne("StokTakip.Entities.Concrete.Irsaliye", "irsaliye")
                        .WithMany("irsaliyeDetaylari")
                        .HasForeignKey("irsaliyeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StokTakip.Entities.Concrete.Malzeme", "malzeme")
                        .WithMany()
                        .HasForeignKey("malzemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("irsaliye");

                    b.Navigation("malzeme");
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Stok", b =>
                {
                    b.HasOne("StokTakip.Entities.Concrete.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StokTakip.Entities.Concrete.Malzeme", "Malzeme")
                        .WithMany()
                        .HasForeignKey("MalzemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StokTakip.Entities.Concrete.Cari", "cari")
                        .WithMany()
                        .HasForeignKey("carId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Depo");

                    b.Navigation("Malzeme");

                    b.Navigation("cari");
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.DepoTransfer", b =>
                {
                    b.Navigation("depoTransferDetaylari");
                });

            modelBuilder.Entity("StokTakip.Entities.Concrete.Irsaliye", b =>
                {
                    b.Navigation("irsaliyeDetaylari");
                });
#pragma warning restore 612, 618
        }
    }
}
